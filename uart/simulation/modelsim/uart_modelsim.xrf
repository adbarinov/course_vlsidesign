vendor_name = ModelSim
source_file = 1, /home/abarinov/MyProject/ASIC/uart/constraints/defaults.sdc
source_file = 1, /home/abarinov/MyProject/ASIC/uart/rtl/uart_tx.sv
source_file = 1, /home/abarinov/MyProject/ASIC/uart/rtl/uart_rx.sv
source_file = 1, /home/abarinov/MyProject/ASIC/uart/rtl/impl_top.sv
source_file = 1, /home/abarinov/MyProject/ASIC/uart/db/uart.cbx.xml
design_name = uart_tx
instance = comp, \uart_txd~output , uart_txd~output, uart_tx, 1
instance = comp, \uart_tx_busy~output , uart_tx_busy~output, uart_tx, 1
instance = comp, \clk~input , clk~input, uart_tx, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, uart_tx, 1
instance = comp, \resetn~input , resetn~input, uart_tx, 1
instance = comp, \uart_tx_en~input , uart_tx_en~input, uart_tx, 1
instance = comp, \bit_counter[0]~16 , bit_counter[0]~16, uart_tx, 1
instance = comp, \bit_counter[3]~24 , bit_counter[3]~24, uart_tx, 1
instance = comp, \bit_counter[4]~26 , bit_counter[4]~26, uart_tx, 1
instance = comp, \cycle_counter[0]~14 , cycle_counter[0]~14, uart_tx, 1
instance = comp, \~GND , ~GND, uart_tx, 1
instance = comp, \cycle_counter[0] , cycle_counter[0], uart_tx, 1
instance = comp, \cycle_counter[1]~16 , cycle_counter[1]~16, uart_tx, 1
instance = comp, \cycle_counter[1] , cycle_counter[1], uart_tx, 1
instance = comp, \cycle_counter[2]~18 , cycle_counter[2]~18, uart_tx, 1
instance = comp, \cycle_counter[2] , cycle_counter[2], uart_tx, 1
instance = comp, \cycle_counter[3]~20 , cycle_counter[3]~20, uart_tx, 1
instance = comp, \cycle_counter[3] , cycle_counter[3], uart_tx, 1
instance = comp, \Equal0~0 , Equal0~0, uart_tx, 1
instance = comp, \cycle_counter[4]~22 , cycle_counter[4]~22, uart_tx, 1
instance = comp, \cycle_counter[4] , cycle_counter[4], uart_tx, 1
instance = comp, \cycle_counter[5]~24 , cycle_counter[5]~24, uart_tx, 1
instance = comp, \cycle_counter[5] , cycle_counter[5], uart_tx, 1
instance = comp, \cycle_counter[6]~26 , cycle_counter[6]~26, uart_tx, 1
instance = comp, \cycle_counter[6] , cycle_counter[6], uart_tx, 1
instance = comp, \cycle_counter[7]~28 , cycle_counter[7]~28, uart_tx, 1
instance = comp, \cycle_counter[7] , cycle_counter[7], uart_tx, 1
instance = comp, \cycle_counter[8]~30 , cycle_counter[8]~30, uart_tx, 1
instance = comp, \cycle_counter[8] , cycle_counter[8], uart_tx, 1
instance = comp, \cycle_counter[9]~32 , cycle_counter[9]~32, uart_tx, 1
instance = comp, \cycle_counter[9] , cycle_counter[9], uart_tx, 1
instance = comp, \cycle_counter[10]~34 , cycle_counter[10]~34, uart_tx, 1
instance = comp, \cycle_counter[10] , cycle_counter[10], uart_tx, 1
instance = comp, \cycle_counter[11]~36 , cycle_counter[11]~36, uart_tx, 1
instance = comp, \cycle_counter[11] , cycle_counter[11], uart_tx, 1
instance = comp, \cycle_counter[12]~38 , cycle_counter[12]~38, uart_tx, 1
instance = comp, \cycle_counter[12] , cycle_counter[12], uart_tx, 1
instance = comp, \cycle_counter[13]~40 , cycle_counter[13]~40, uart_tx, 1
instance = comp, \cycle_counter[13] , cycle_counter[13], uart_tx, 1
instance = comp, \Equal0~3 , Equal0~3, uart_tx, 1
instance = comp, \Equal0~1 , Equal0~1, uart_tx, 1
instance = comp, \Equal0~2 , Equal0~2, uart_tx, 1
instance = comp, \Equal0~4 , Equal0~4, uart_tx, 1
instance = comp, \Selector2~1 , Selector2~1, uart_tx, 1
instance = comp, \fsm_state.FSM_SEND , fsm_state.FSM_SEND, uart_tx, 1
instance = comp, \Selector3~0 , Selector3~0, uart_tx, 1
instance = comp, \Selector3~1 , Selector3~1, uart_tx, 1
instance = comp, \fsm_state.FSM_STOP , fsm_state.FSM_STOP, uart_tx, 1
instance = comp, \bit_counter[6]~20 , bit_counter[6]~20, uart_tx, 1
instance = comp, \bit_counter[6]~21 , bit_counter[6]~21, uart_tx, 1
instance = comp, \bit_counter[4] , bit_counter[4], uart_tx, 1
instance = comp, \bit_counter[5]~28 , bit_counter[5]~28, uart_tx, 1
instance = comp, \bit_counter[5] , bit_counter[5], uart_tx, 1
instance = comp, \stop_done~0 , stop_done~0, uart_tx, 1
instance = comp, \bit_counter[6]~30 , bit_counter[6]~30, uart_tx, 1
instance = comp, \bit_counter[6] , bit_counter[6], uart_tx, 1
instance = comp, \bit_counter[7]~32 , bit_counter[7]~32, uart_tx, 1
instance = comp, \bit_counter[7] , bit_counter[7], uart_tx, 1
instance = comp, \bit_counter[8]~34 , bit_counter[8]~34, uart_tx, 1
instance = comp, \bit_counter[8] , bit_counter[8], uart_tx, 1
instance = comp, \bit_counter[9]~36 , bit_counter[9]~36, uart_tx, 1
instance = comp, \bit_counter[9] , bit_counter[9], uart_tx, 1
instance = comp, \stop_done~1 , stop_done~1, uart_tx, 1
instance = comp, \bit_counter[10]~38 , bit_counter[10]~38, uart_tx, 1
instance = comp, \bit_counter[10] , bit_counter[10], uart_tx, 1
instance = comp, \bit_counter[11]~40 , bit_counter[11]~40, uart_tx, 1
instance = comp, \bit_counter[11] , bit_counter[11], uart_tx, 1
instance = comp, \bit_counter[12]~42 , bit_counter[12]~42, uart_tx, 1
instance = comp, \bit_counter[12] , bit_counter[12], uart_tx, 1
instance = comp, \bit_counter[13]~44 , bit_counter[13]~44, uart_tx, 1
instance = comp, \bit_counter[13] , bit_counter[13], uart_tx, 1
instance = comp, \stop_done~2 , stop_done~2, uart_tx, 1
instance = comp, \stop_done~3 , stop_done~3, uart_tx, 1
instance = comp, \Selector2~0 , Selector2~0, uart_tx, 1
instance = comp, \bit_counter[6]~46 , bit_counter[6]~46, uart_tx, 1
instance = comp, \bit_counter[0] , bit_counter[0], uart_tx, 1
instance = comp, \bit_counter[1]~18 , bit_counter[1]~18, uart_tx, 1
instance = comp, \bit_counter[1] , bit_counter[1], uart_tx, 1
instance = comp, \bit_counter[2]~22 , bit_counter[2]~22, uart_tx, 1
instance = comp, \bit_counter[2] , bit_counter[2], uart_tx, 1
instance = comp, \bit_counter[3] , bit_counter[3], uart_tx, 1
instance = comp, \Selector0~0 , Selector0~0, uart_tx, 1
instance = comp, \fsm_state~8 , fsm_state~8, uart_tx, 1
instance = comp, \fsm_state.FSM_IDLE , fsm_state.FSM_IDLE, uart_tx, 1
instance = comp, \Selector1~2 , Selector1~2, uart_tx, 1
instance = comp, \fsm_state.FSM_START , fsm_state.FSM_START, uart_tx, 1
instance = comp, \uart_tx_data[0]~input , uart_tx_data[0]~input, uart_tx, 1
instance = comp, \uart_tx_data[1]~input , uart_tx_data[1]~input, uart_tx, 1
instance = comp, \uart_tx_data[4]~input , uart_tx_data[4]~input, uart_tx, 1
instance = comp, \uart_tx_data[6]~input , uart_tx_data[6]~input, uart_tx, 1
instance = comp, \uart_tx_data[7]~input , uart_tx_data[7]~input, uart_tx, 1
instance = comp, \data_to_send~8 , data_to_send~8, uart_tx, 1
instance = comp, \data_to_send[7] , data_to_send[7], uart_tx, 1
instance = comp, \data_to_send~7 , data_to_send~7, uart_tx, 1
instance = comp, \always1~0 , always1~0, uart_tx, 1
instance = comp, \data_to_send[6]~1 , data_to_send[6]~1, uart_tx, 1
instance = comp, \data_to_send[6] , data_to_send[6], uart_tx, 1
instance = comp, \uart_tx_data[5]~input , uart_tx_data[5]~input, uart_tx, 1
instance = comp, \data_to_send~6 , data_to_send~6, uart_tx, 1
instance = comp, \data_to_send[5] , data_to_send[5], uart_tx, 1
instance = comp, \data_to_send~5 , data_to_send~5, uart_tx, 1
instance = comp, \data_to_send[4] , data_to_send[4], uart_tx, 1
instance = comp, \uart_tx_data[3]~input , uart_tx_data[3]~input, uart_tx, 1
instance = comp, \data_to_send~4 , data_to_send~4, uart_tx, 1
instance = comp, \data_to_send[3] , data_to_send[3], uart_tx, 1
instance = comp, \uart_tx_data[2]~input , uart_tx_data[2]~input, uart_tx, 1
instance = comp, \data_to_send~3 , data_to_send~3, uart_tx, 1
instance = comp, \data_to_send[2] , data_to_send[2], uart_tx, 1
instance = comp, \data_to_send~2 , data_to_send~2, uart_tx, 1
instance = comp, \data_to_send[1] , data_to_send[1], uart_tx, 1
instance = comp, \data_to_send~0 , data_to_send~0, uart_tx, 1
instance = comp, \data_to_send[0] , data_to_send[0], uart_tx, 1
instance = comp, \txd_reg~0 , txd_reg~0, uart_tx, 1
instance = comp, \txd_reg~1 , txd_reg~1, uart_tx, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
